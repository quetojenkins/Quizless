#
What is an Embedded system?
An embedded systems are infomation processing systems embedded within a larger product. Time and concurrency management are important.
#
What is a real time system?
An event driven system that is reactive to inputs or events and produces a predictable output.
#
What are key characterisitcs of a RT system?
Event driven, continous operation, tolerant, predictable behaviour.
#
What are the four cases of RT?
Hard, soft, real and firm RT
#
What is Hard RT?
A hard real time system is one in which it is absolutly imperative that the response occurs within the required deadline. Eg a flight contorl sysyem
#
What is Soft RT
A system where deadlines of responses are important but will still function if the occasional deadline is missed. Create more on TASK optimisation and not TIMING optisimatsion.
#
What is Real RT
Systems that have at least one hard RT system with a very short response time
#
What is firm RT
It is a system that can survive task faliures if deadlines are missed as long as they occur far apart.
#
What is a STATIC RT system?
Task times are finely predicted. Static analysis is possible.
#
What is a DYNAMIC RT?
Arrival times of tasks may be unpredictable.
#
What is periodic design?
Each task executes repeatedly at specific periods. And well suited to hard RT.
#
What is aperiodic or asynchrnouns design?
An aperiodic, or ‘sporadic’, system is designed around being reactive.
#
Tabulate the differences between hard real time and soft realtime.
!FileHandeling Section/pictures/hardAndSoftRTDifferences.png
#
What is a saftey critical system?
A system where faliure could result in death or injury to people or sevre damage to environments.
#
What are the three types of resource availability? And what are they?
Abundance of rescources: all computing and timing constraints easily met. ~ Totally inadequate resources: major short fall. Simplifies design. Sufficient but scarce resources: makes probelems harder.
#
What is a “Dynamic Synchronous Hard Real-time System?”
It is a system that has unpredictable task arrival times but executes at a specific period. The implemntation is strict and timings are presicely adhered to.
#
I have a system comprises two computers, the one a hard RTS and the other a soft RTS, what is the whole system called then?
A hard RTS.
#
What is the internet of things?
the billions of physical embedded devices around the world that are connected to the internet, all collecting and delivering data.
#
Why has there been an explosion of IoT devies?
This is possible from super cheap computer chips and ubiquity of wireless networks… together making it possible to turn (almost) anything into a part of the IoT.
#
What is a design metric?
a measurable feature of an embedded system’s design, e.g. its performance, cost, time for implementation, safety, etc.
#
What is the development environment?
the environment where development occurs
#
What does the development envionement include?
Equipment used for development, ~ tools uised for development (compilers, linkers etc) and ~ other resources such as manuals and datasheets.
#
What are the benefits of the PC development environment?
The environment is well defined ~ The toolchain is fully configured ~ Debugging is easy with an IDE~ there are libraries
#
What are the issues with the embedded development environment?
Tools depend on the software vendor, the hardware vendor and the peripherals used~ the tootchain must be built from scratch ~few libraries availbale
#
Why is C so great?
It is simple,~ flexible~ portable~ just enough abstraction~ just high level enough to make it friendly
#
What is the Execution ENvironemnt?
components that are used together with the application’s code to make a complete computing system, including: the processors, networks, operating systems and so on
#
What is the runtime Environment?
The runtime environment (RTEnv) is the computer-based environment in which a program is designed to run in, including various components such as processors, networks, and operating systems, and is a significant part of the broader execution environment (EE).|| It may also be responsible for setting up and managing the stack and heap, and may include features such as garbage collection, threads or other dynamic features
#
What issues does the RTEnv deal with?
How the program starts ~How the functions are called and returned~ Methods for passing parameters~Memory manegement of application~ ways to interface to the OS~ How to connect peripherals
#
What is an Application Binary Interface (ABI)?
defines the low-level interface between programs or between program and operating system.| An ABI standard defines sizes and ~structures of data types, ~endianness, ~system calls numbers or OS connection, ~calling convention, ~format of executable files, etc.
#
What is the compiling tool chain?
converts source code into binary machine code~link source code and binary machine code~ seperatly assembly code modules~dissasemble binaries~convert formats
#
What is a cross compiler?
A compiler capable of creating executable code for a platform other than the one on which the compiler is running.
#
What is a cross compiler toolchain?
the collection of tools used in developing software solutions for a platform
#
What are the GCC Tools? And what path does the C source code go through to become executable?
!FileHandeling Section/pictures/pathFromCtoELF.jpg
#
What are GNU Binutils?
The GNU Binutils are a collection of binary tools commonly used with GCC
#
WHat is (Executable File Format)?
It is a specific structure to store and represent machine code and data required for a program to be executed directly by an OS.|It defines how the instructions and data are stored within a file.
#
What is ELF (Executable and Linkable Format)?
ELF (Executable and Linkable Format) is a widely adopted file format for executable programs and shared libraries, commonly used in Unix-like operating systems, offering platform independence and support for dynamic linking.
#
Draw a diagram of the ELF File Structure.
!FileHandeling Section/pictures/ELF_file_structure.png
#


